stylesheet "1.0";
include "../utils/strings.xsl";
include "../utils/token-strings.xsl";
output method="xml" indent="yes";

//////////////////////////////////////////////////////////////////////
// Stylesheet parameters
//////////////////////////////////////////////////////////////////////

#article = { ""; }

#background-article-name = { ""; }

#background-tptp-xml = { ""; }

//////////////////////////////////////////////////////////////////////
// Templates
//////////////////////////////////////////////////////////////////////

// If we don't handle something explicitly, we don't handle it at all.
tpl [*] {
  $n = `name (.)`;
  $message = `concat ("Error: we have arrived at an unhandled ", $n, " node.")`;
  msg terminate="yes" $message;
}

tpl [/] {
  choose {
    when [$article = ""] {
      msg terminate="yes" "Error: the empty string is not an acceptable value for the article stylesheet parameter.";
    }
    when [string-length ($article) > 8] {
      $too-long-message = `concat ("Error: the value (", $article, ") of the article stylesheet parameter is too long (it must be at most 8 characters).")`;
      msg terminate="yes" $too-long-message;
    }
    when [contains ($article, " ")] {
      msg terminate="yes" "Error: the value of the article stylesheet parameter contains whitespace.";
    }
    when [tstp] {
      apply [tstp] (#proofs = ",,");
    }
    otherwise {
      msg terminate="yes" "Error: the required tstp document element is missing.";
    }
  }
}

tpl ident (#s) {
  <Ident {
    @"name" = $s;
  }
}

tpl maybe-emit-background-ident {
  if [not($background-article-name = "")] {
    $background-uc = uc (#s = $background-article-name);
    $background-with-suffix = `concat ($background-uc, "E")`;
    ident (#s = $background-with-suffix);
  }
}

tpl [tstp] {
  $article-uc = uc (#s = $article);
  $article-with-suffix = `concat ($article-uc, "E")`;
  <Environ {
    @aid = $article-uc;
    <Directive {
      @"name" = "Vocabularies";
      if [not($background-article-name = "")] {
        $background-uc = uc (#s = $background-article-name);
        ident (#s = $background-uc);
      }
      ident (#s = $article-uc);
    }
    <Directive {
      @"name" = "Notations";
      maybe-emit-background-ident ();
      ident (#s = $article-with-suffix);
    }
    <Directive {
      @"name" = "Constructors";
      maybe-emit-background-ident ();
      ident (#s = $article-with-suffix);
    }
    <Directive {
      @"name" = "Theorems";
      ident (#s = $article-with-suffix);
    }
  }
}
