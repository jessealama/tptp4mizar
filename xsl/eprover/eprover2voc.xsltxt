stylesheet "1.0";
output method="text";

//////////////////////////////////////////////////////////////////////
// Templates
//////////////////////////////////////////////////////////////////////

tpl [/] {
  choose {
    when [not(tstp)] {
      msg terminate="yes" "Error: this does not appear to be a TSTP XML document, because it lacks a 'tstp' root element.";
    }
    when [tstp[2]] {
      msg terminate="yes" "Error: this does not appear to be a TSTP XML document, because it has multiple 'tstp' root elements.";
    }
    otherwise {
      apply [tstp];
    }
  }
}

tpl [tstp] {
  for-each [descendant::predicate[@name and not(@name = "=") and not(@name = preceding::predicate[@name]/@name)]] {
    apply [.]; "\n";
  }
  for-each [descendant::function[@name and not(@name = preceding::function[@name]/@name) and not(@name = ancestor::function[@name]/@name)]] {
    apply [.]; "\n";
  }
}

tpl [predicate[@name and not(@name = "=")]] {
  "R"; `@name`;
}

tpl [function[@name]] {
  "O"; `@name`;
}