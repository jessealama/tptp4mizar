stylesheet "1.0";
output method="xml" indent="yes";

// Given a TPTP derivation output by E, recreate the refutation
// problem with slightly different axioms: the results of
// skolemization are treated as axioms, not the axioms that are the
// premises of skolemization steps.  Axioms that are never skolemized
// are passed through verbatim.

// By default, copy
tpl [*] {
  $n = `name (.)`;
  <$n {
    for-each [@*] { copy-of `.`; }
    apply [*];
  }
}

tpl [*] mode="copy" {
  $n = `name (.)`;
  <$n {
    for-each [@*] { copy-of `.`; }
    apply [*] mode="copy";
  }
}

tpl [/] {
  if [tstp] {
    <tstp {
      apply [tstp];
    }
  } else {
    msg terminate="yes" "Error: the required tstp document element is missing.";
  }
}

tpl [tstp] {
  for-each [formula] {
    choose {
      when [@status = "axiom" and not(@name = ancestor::tstp/formula/source[@name = "inference"]/non-logical-data[@name = "skolemize"]/non-logical-data[position() = last()]/number[@name]/@name)] {
        apply [.] mode="make-axiom";
      }
      when [source/non-logical-data[@name = "inference"]/non-logical-data[@name = "skolemize"]] {
        apply [.] mode="make-axiom";
      }
      when [@status = "conjecture"] {
        apply [.];
      }
      otherwise {
        // ignore
      }
    }
  }
}

tpl [formula] {
  <formula {
    for-each [@*] { copy-of `.`; }
    apply [*[1]];
  }
}

tpl [formula] mode="make-axiom" {
  <formula {
    for-each [@*] { copy-of `.`; }
    @status = "axiom";
    apply [*[1]];
  }
}

tpl [function] {
  $n = `@name`;
  if [starts-with ($n, "esk")] {
    <function {
      $after-esk-prefix = `substring-after ($n, "esk")`;
      $skolem-number = `substring-before ($after-esk-prefix, "_")`;
      @"name" = `concat ("skolem", $skolem-number)`;
      apply [*];
    }
  } else {
    apply [.] mode="copy";
  }
}
