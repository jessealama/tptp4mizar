stylesheet "1.0";
output method="text"; // actually, we will output nothing at all if the document is OK

key "formulas" [formula[@name]] `@name`;

tpl [/] {
  if [tstp] {
    apply [tstp];
  } else {
    msg terminate="yes" "Error: missing the tstp document element.";
  }
}

tpl skolem-functions {
  "";
}

tpl [tstp] {
  apply [formula];
}

tpl [formula[source/non-logical-data[@name = "inference"]]] {

  $formula-name = `@name`;

  // Try something simple now: check whether there is exactly one
  // skolem function symbol occuring in this formula.
  //
  // A more robust approach would compare the skolem functions already
  // present in the formula on which this one depends, and ensure that
  // the set of skolem functions present there has exactly one fewer
  // member than the set of skolem functions appearing in the present
  // formula.

  // If a non-skolem function starts with "esk", this test is bogus
  // I hope this isn't too slow...
  for-each [descendant::function[@name and starts-with (@name, "esk")]] {
    $skolem-name = `@name`;
    for-each [ancestor::formula] {
      for-each [descendant::function[@name and starts-with (@name, "esk") and not(@name = $skolem-name)]] {
        $other-skolem-name = `@name`;
        $message = `concat ("Error: formula ", $formula-name, " introduces at least two skolem functions (", $skolem-name, " and ", $other-skolem-name, ").", "\n", "We currently do not handle such E proofs.")`;
        msg terminate="yes" $message;
      }
    }
  }
}

tpl [formula[not(source/non-logical-data[@name = "inference"])]] {
  ""; // OK, nothing could go wrong
}
